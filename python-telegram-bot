from telegram.ext import Updater, CommandHandler
import requests

# Function to handle the /start command
def start(update, context):
    update.message.reply_text("Welcome to MovieBot! Type /recommend to get movie recommendations.")

# Function to handle the /recommend command
def recommend(update, context):
    # Fetch movie recommendations from MovieBox API or IMDB
    movie_data = fetch_movie_recommendations()
    
    # Format movie data into a message
    message = format_movie_data(movie_data)
    
    # Send the message back to the user
    update.message.reply_text(message)

# Function to fetch movie recommendations from MovieBox API or IMDB
def fetch_movie_recommendations():
    # Replace this with code to fetch movie data from MovieBox API or IMDB
    # For example:
    # response = requests.get('https://api.moviebox.com/recommendations')
    # movie_data = response.json()
    # return movie_data
    
    # For demonstration purposes, returning sample movie data
    return [
        {"title": "Inception", "genre": "Sci-Fi", "rating": 8.8},
        {"title": "The Shawshank Redemption", "genre": "Drama", "rating": 9.3},
        {"title": "The Dark Knight", "genre": "Action", "rating": 9.0}
    ]

# Function to format movie data into a message
def format_movie_data(movie_data):
    message = "Here are some movie recommendations:\n"
    for movie in movie_data:
        message += f"Title: {movie['title']}\nGenre: {movie['genre']}\nRating: {movie['rating']}\n\n"
    return message

def main():
    # Set up the Telegram bot
    updater = Updater("YOUR_BOT_TOKEN", use_context=True)
    dispatcher = updater.dispatcher
    
    # Add command handlers
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CommandHandler("recommend", recommend))
    
    # Start the bot
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
